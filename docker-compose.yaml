services:
  vector-db:
    image: chromadb/chroma
    container_name: chromadb_container
    networks:
      - timepledge_network
    ports:
      - "8080:8000"
    volumes:
      - chromadb_data:/data # Production on server
      - ./chromadb_data:/data # Dev on machine (remove for production)
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: 16GB

  backend:
    image: backend_image
    build:
      context: ./chatbot_backend
      dockerfile: Dockerfile.backend
    container_name: backend_container
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
    networks:
      - timepledge_network
    depends_on:
      - vector-db
    ports:
      - 8081:8000
    volumes:
      - ./chatbot_backend/.cache/:/root/.cache/
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: 16G

  frontend:
    image: frontend_image
    build:
      context: ./chatbot_frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend_container
    networks:
      - timepledge_network
    depends_on:
      - backend
    ports:
      - "8082:8501"
    deploy:
      resources:
        limits:
          cpus: "6"
          memory: 16G

networks:
  timepledge_network:
    name: timepledge_network

volumes:
  chromadb_data:
    name: chromadb_data
